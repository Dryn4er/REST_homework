name: REST_homework

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          SECRET_KEY: 'secret-key'
          POSTGRES_DB: mytestdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      SECRET_KEY: 'secret-key'
      POSTGRES_HOST: 'localhost'
      POSTGRES_PORT: 5432
      POSTGRES_DB: mytestdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      run: python manage.py migrate

    - name: Run tests
      run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
        run: |
          sshpass -p "ntSHuQx?wA&u" ssh -v -o StrictHostKeyChecking=no root@94.103.12.183 "
            set -e

            while fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
              echo 'Waiting for other apt processes to finish...'
              sleep 5
            done

            apt-get update && apt-get install -y python3.12-venv && \
            cd /root/Django_DRF && \
            git switch feature/homework_35.2 && \
            python3 -m venv venv && \
            source venv/bin/activate && \
            git pull && \
            pip install -r requirements.txt && \
            sudo systemctl restart nginx
          "